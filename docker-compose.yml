version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rag_saas
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d rag_saas" ]
      interval: 5s
      timeout: 10s
      retries: 20
  
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  flask_app:
    build:
      context: ./Flask
      dockerfile: Dockerfile
    container_name: flask-backend
    restart: always
    env_file:
      - ./Flask/.env
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - uploaded_documents:/flask_app/uploadedDocuments
    
  celery_worker:
    build:
      context: ./batch
      dockerfile: Dockerfile.Celery
    container_name: celery-worker
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
        - uploaded_documents:/flask_app/uploadedDocuments

  frontend:
    build:
      context: ./front
    container_name: front
    ports:
      - "3000:3000"
    depends_on:
      - flask_app

volumes:
  uploaded_documents: